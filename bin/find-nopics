#! /usr/bin/env perl

use myperl;

use Getopt::Std;
use File::Glob ':glob';

use Music;


my $opts = {};
getopts('hsS', $opts);

HELP_MESSAGE() if $opts->{h};

sub HELP_MESSAGE
{
	say STDERR "usage: $ME [-h] | [-S] | [-s]";
	say STDERR "           -h : this help message";
	say STDERR "           -S : also check Singles/";
	say STDERR "           -s : only summarize (ignores -S)";
	exit;
}

our $INDENT;


if ($opts->{S})
{
	say 'Singles:' unless $opts->{s};
	$INDENT = 2;
	foreach my $file (glob($SINGLES_DIR->file('*')))
	{
		say_if_no_pic($file);
	}
}


say 'Albums:' unless $opts->{s};
$INDENT = 4;
my $count = 0;
foreach my $dir (map { dir($_) } glob($ALBUM_DIR->file('*')), glob($MISC_DIR->file('*')))
{
	my $album = $dir->basename;
	print STDERR '.' if ++$count % 10 == 0 and $opts->{s};
	foreach my $file (glob("$dir/*"))
	{
		say_if_no_pic($file, $album);
	}
}

if ($opts->{s})
{
	say STDERR ' done';
	say_if_no_pic('SUMMARY');
}


func say_if_no_pic ($file, $album?)
{
	state $printed = {};

	if ($file eq 'SUMMARY')
	{
		say foreach sort keys %$printed;
		return;
	}

	return if $opts->{s} and not $album;								# no point; output would be suppressed anyway

	my $tag = get_tag($file);
	die("can't get tag for file $file") unless $tag;
	unless ($tag->has_pic)
	{
		if ($album and !$printed->{$album})
		{
			say ' ' x ($INDENT/2), $album unless $opts->{s};
			$printed->{$album} = 1;
		}
		say ' ' x $INDENT, $tag->file unless $opts->{s};
	}
}
