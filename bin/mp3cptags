#! /usr/bin/env perl

use myperl;
use autodie ':all';

use MP3::Tag;
use Getopt::Std;

use Music;


my $opts = {};
getopts('hf', $opts);

HELP_MESSAGE() if $opts->{h};

sub HELP_MESSAGE
{
	say STDERR "usage: $ME [-h] | [-f] <from-file> <to-file>";
	say STDERR "           -f : force (don't ask silly questions)";
	say STDERR "           -h : this help message";
	say STDERR "          <from-file> : copy ID3 tags from here";
	say STDERR "          <to-file>   : copy ID3 tags to here";
	exit;
}


my ($from, $to) = @ARGV;
die("$0: must supply from and to on command line") unless $from and $to;

my $old_tag = get_tag($from);
die("couldn't get tag: $!") unless $old_tag;

# check if we're going to blow away anything important
{																		# remove existing tags
	my $new_tag = get_tag($to);
	if ($new_tag->has_v1)
	{
		unless ($opts->{f})
		{
			warn "\nExisting ID3v1 tag will be destroyed!!!\n";
			exit 1 unless confirm "Are you sure?";
		}
	}
	if ($new_tag->has_v2)
	{
		unless ($opts->{f})
		{
			warn "\nExisting ID3v2 tag will be destroyed!!!\n";
			warn "  Existing frames:\n";
			$new_tag->print_frames(prefix => '    ', out => \*STDERR);
			exit 1 unless confirm "Are you sure?";
		}
	}
	$new_tag->drop;
}

# do the deed
$old_tag->attach($to)->save;

# finally, rename file, if the user is cool with that
if ($opts->{f} or confirm "Do you want to rename the new file with the old file's name?")
{
	my $base = file($from)->basename;
	my $new = file($to)->dir->file($base);
	rename $to, $new;
}
